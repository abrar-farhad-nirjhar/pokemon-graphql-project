{"version":3,"sources":["lib/apollo.js","graphql/pokemons.query.js","components/pokemon-cards/index.jsx","assets/pokemon.png","components/header-banner/index.jsx","pages/Home/index.jsx","graphql/pokemon.query.js","pages/details/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["client","ApolloClient","uri","cache","InMemoryCache","pokemons_query","gql","PokemonCard","data","className","name","src","image","alt","HeaderBanner","to","PokemonImage","Home","useState","first","setFirst","pokemons","setPokemons","useLazyQuery","variables","onCompleted","getPokemons","useEffect","slice","length","dataLength","next","hasMore","map","element","index","id","pokemon_query","Details","pokemonData","setPokemonData","params","useParams","useQuery","console","log","pokemon","number","classification","bordered","attacks","fast","type","damage","special","resistant","evolutions","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAEaA,EAAS,IAAIC,eAAa,CACrCC,IAAK,sCACLC,MAAO,IAAIC,kB,wBCDAC,EAAiBC,cAAH,sX,eCcZC,EAbK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,qBAAKC,UAAU,gBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,qBAAf,SAAqCD,EAAKE,OAC1C,qBAAKD,UAAU,qBAAf,SACE,qBAAKE,IAAKH,EAAKI,MAAOC,IAAKL,EAAKE,e,QCV3B,G,MAAA,IAA0B,qC,QCK1B,SAASI,IACtB,OACE,qBAAKL,UAAU,SAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CAAMM,GAAG,IAAT,SACE,qBAAKJ,IAAKK,EAAcP,UAAU,OAAOI,IAAI,+B,MCDxC,SAASI,IAAQ,IAAD,EACHC,mBAAS,IADN,mBACtBC,EADsB,KACfC,EADe,OAEGF,mBAAS,IAFZ,mBAEtBG,EAFsB,KAEZC,EAFY,OAGGC,uBAAalB,EAAgB,CAC3DmB,UAAW,CAAEL,SACbM,YAAa,SAAUjB,GACrBc,EAAY,GAAD,mBAAKD,GAAL,YAAkBb,EAAKa,eANT,mBAGtBK,EAHsB,KAGPlB,EAHO,KAGPA,KAOtBmB,qBAAU,WACRD,MACC,CAACP,IAEJQ,qBAAU,WACJnB,GACFc,EAAY,GAAD,mBACND,GADM,YAENb,EAAKa,SAASO,MAAMP,EAASQ,OAAQrB,EAAKa,SAASQ,aAGzD,CAACrB,IAMJ,OACE,gCACE,cAACM,EAAD,IACA,cAAC,IAAD,CACEgB,WAAYT,EAASQ,OACrBE,KATe,WACnBX,EAASD,EAAQ,KASba,SAAS,EAHX,SAKE,qBAAKvB,UAAU,qBAAf,SACGY,EAASY,KAAI,SAACC,EAASC,GACtB,OACE,8BACE,cAAC,IAAD,CAAMpB,GAAE,WAAMmB,EAAQxB,KAAd,YAAsBwB,EAAQE,IAAtC,SACE,cAAC,EAAD,CAAa5B,KAAM0B,GAAcC,MAF3BA,a,aC7CXE,EAAgB/B,cAAH,me,MCMX,SAASgC,IAAW,IAAD,EACMpB,qBADN,mBACzBqB,EADyB,KACZC,EADY,KAE1BC,EAASC,cACPlC,EAASmC,mBAASN,EAAe,CACvCb,UAAW,CAAEY,GAAIK,EAAOL,GAAI1B,KAAM+B,EAAO/B,QADnCF,KAWR,OAPAmB,qBAAU,WACRiB,QAAQC,IAAIrC,GACRA,GACFgC,EAAehC,EAAKsC,WAErB,CAACtC,IAGF,gCACE,cAACM,EAAD,IAEA,sBAAKL,UAAU,cAAf,iBAA8BD,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAMsC,QAAQpC,KAA5C,cAEA,sBAAKD,UAAU,oBAAf,UACE,qBAAKA,UAAU,uBAAf,SACG8B,GAAe,cAAC,EAAD,CAAa/B,KAAM+B,MAErC,sBAAK9B,UAAU,UAAf,UACE,qBAAKA,UAAU,iBAAf,qBACA,+BACE,yDAAqBD,QAArB,IAAqBA,OAArB,EAAqBA,EAAMsC,QAAQC,UACnC,+CAAWvC,QAAX,IAAWA,OAAX,EAAWA,EAAMsC,QAAQpC,QACzB,yDAAqBF,QAArB,IAAqBA,OAArB,EAAqBA,EAAMsC,QAAQE,qBAErC,uBACA,qBAAKvC,UAAU,iBAAf,0BACA,wBAAOwC,UAAQ,EAAf,UACE,+BACE,sCACA,sCACA,2CAJJ,OAMGzC,QANH,IAMGA,OANH,EAMGA,EAAMsC,QAAQI,QAAQC,KAAKlB,KAAI,SAACC,EAASC,GAAV,OAC9B,+BACE,6BAAKD,EAAQxB,OACb,6BAAKwB,EAAQkB,OACb,6BAAKlB,EAAQmB,kBAInB,uBACA,qBAAK5C,UAAU,iBAAf,6BACA,wBAAOwC,UAAQ,EAAf,UACE,+BACE,sCACA,sCACA,2CAJJ,OAMGzC,QANH,IAMGA,OANH,EAMGA,EAAMsC,QAAQI,QAAQI,QAAQrB,KAAI,SAACC,EAASC,GAAV,OACjC,+BACE,6BAAKD,EAAQxB,OACb,6BAAKwB,EAAQkB,OACb,6BAAKlB,EAAQmB,kBAInB,uBACA,qBAAK5C,UAAU,iBAAf,wBACA,gCACE,oCACGD,QADH,IACGA,OADH,EACGA,EAAMsC,QAAQS,UAAUtB,KAAI,SAACC,EAASC,GAAV,OAC3B,6BAAiBD,GAARC,aAKjB,sBAAK1B,UAAU,aAAf,UACG8B,GAAeA,EAAYiB,YAC1B,qBAAK/C,UAAU,iBAAf,+BAED8B,GACCA,EAAYiB,YACZjB,EAAYiB,WAAWvB,KAAI,SAACC,EAASC,GAAV,OACzB,cAAC,IAAD,CAAkBpB,GAAE,WAAMmB,EAAQxB,KAAd,YAAsBwB,EAAQE,IAAlD,SACE,cAAC,EAAD,CAAa5B,KAAM0B,KADVC,eCjEVsB,MAjBf,WACE,OACE,cAAC,iBAAD,CAAgBzD,OAAQA,EAAxB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0D,KAAK,IAAIC,OAAO,EAAvB,SACE,cAAC1C,EAAD,MAEF,cAAC,IAAD,CAAOyC,KAAK,aAAZ,SACE,cAACpB,EAAD,cCHGsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9f38023f.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nexport const client = new ApolloClient({\r\n  uri: 'https://graphql-pokemon2.vercel.app',\r\n  cache: new InMemoryCache()\r\n});","import { gql } from '@apollo/client'\r\n\r\n\r\nexport const pokemons_query = gql`query pokemons($first: Int!) {\r\n  pokemons(first: $first) {\r\n    id\r\n    number\r\n    name\r\n    image\r\n    attacks {\r\n      fast {\r\n        name\r\n        type\r\n        damage\r\n      }\r\n      special {\r\n        name\r\n        type\r\n        damage\r\n      }\r\n    }\r\n    evolutions {\r\n      id\r\n      number\r\n      name\r\n    }\r\n    classification\r\n  }\r\n}`\r\n","import React from 'react';\r\n\r\nimport './style.css';\r\n\r\nconst PokemonCard = ({ data }) => {\r\n  return (\r\n    <div className='pokemon-cards'>\r\n      <div className='pokemon-card'>\r\n        <div className='pokemon-card-title'>{data.name}</div>\r\n        <div className='pokemon-card-media'>\r\n          <img src={data.image} alt={data.name} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","export default __webpack_public_path__ + \"static/media/pokemon.c8e5f541.png\";","import React from 'react';\r\nimport './style.css';\r\nimport PokemonImage from '../../assets/pokemon.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function HeaderBanner() {\r\n  return (\r\n    <div className='banner'>\r\n      <div className='images'>\r\n        <Link to='/'>\r\n          <img src={PokemonImage} className='logo' alt='pokemon-header-image' />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { pokemons_query } from '../../graphql/pokemons.query.js';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport PokemonCard from '../../components/pokemon-cards/index';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport HeaderBanner from '../../components/header-banner';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n  const [first, setFirst] = useState(10);\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [getPokemons, { data }] = useLazyQuery(pokemons_query, {\r\n    variables: { first },\r\n    onCompleted: function (data) {\r\n      setPokemons([...pokemons, ...data.pokemons]);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getPokemons();\r\n  }, [first]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setPokemons([\r\n        ...pokemons,\r\n        ...data.pokemons.slice(pokemons.length, data.pokemons.length),\r\n      ]);\r\n    }\r\n  }, [data]);\r\n\r\n  const loadMoreData = () => {\r\n    setFirst(first + 10);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HeaderBanner />\r\n      <InfiniteScroll\r\n        dataLength={pokemons.length}\r\n        next={loadMoreData}\r\n        hasMore={true}\r\n      >\r\n        <div className='pokemons-container'>\r\n          {pokemons.map((element, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <Link to={`/${element.name}/${element.id}`}>\r\n                  <PokemonCard data={element} key={index} />\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n}\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const pokemon_query = gql`\r\n  query pokemon($id: String!, $name: String!) {\r\n    pokemon(id: $id, name: $name) {\r\n      id\r\n      number\r\n      name\r\n      image\r\n      attacks {\r\n        fast {\r\n          name\r\n          type\r\n          damage\r\n        }\r\n        special {\r\n          name\r\n          type\r\n          damage\r\n        }\r\n      }\r\n      evolutions {\r\n        id\r\n        number\r\n        name\r\n        image\r\n      }\r\n      classification\r\n      resistant\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport HeaderBanner from '../../components/header-banner';\r\nimport { pokemon_query } from '../../graphql/pokemon.query.js';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useParams } from 'react-router-dom';\r\nimport PokemonCard from '../../components/pokemon-cards';\r\nimport './style.css';\r\nimport { Link } from 'react-router-dom';\r\nexport default function Details() {\r\n  const [pokemonData, setPokemonData] = useState();\r\n  const params = useParams();\r\n  const { data } = useQuery(pokemon_query, {\r\n    variables: { id: params.id, name: params.name },\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n    if (data) {\r\n      setPokemonData(data.pokemon);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <HeaderBanner />\r\n\r\n      <div className='page-header'>{data?.pokemon.name} Details</div>\r\n\r\n      <div className='details-container'>\r\n        <div className='pokemon-card-display'>\r\n          {pokemonData && <PokemonCard data={pokemonData} />}\r\n        </div>\r\n        <div className='details'>\r\n          <div className='section-header'>Details</div>\r\n          <ul>\r\n            <li>Pokedex Number: {data?.pokemon.number}</li>\r\n            <li>Name: {data?.pokemon.name}</li>\r\n            <li>Classification: {data?.pokemon.classification}</li>\r\n          </ul>\r\n          <br />\r\n          <div className='section-header'>Fast Attacks</div>\r\n          <table bordered>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Damage</th>\r\n            </tr>\r\n            {data?.pokemon.attacks.fast.map((element, index) => (\r\n              <tr>\r\n                <td>{element.name}</td>\r\n                <td>{element.type}</td>\r\n                <td>{element.damage}</td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n          <br />\r\n          <div className='section-header'>Special Attacks</div>\r\n          <table bordered>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Damage</th>\r\n            </tr>\r\n            {data?.pokemon.attacks.special.map((element, index) => (\r\n              <tr>\r\n                <td>{element.name}</td>\r\n                <td>{element.type}</td>\r\n                <td>{element.damage}</td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n          <br />\r\n          <div className='section-header'>Resistance</div>\r\n          <table>\r\n            <tr>\r\n              {data?.pokemon.resistant.map((element, index) => (\r\n                <td key={index}>{element}</td>\r\n              ))}\r\n            </tr>\r\n          </table>\r\n        </div>\r\n        <div className='evolutions'>\r\n          {pokemonData && pokemonData.evolutions && (\r\n            <div className='section-header'>Future Evolutions</div>\r\n          )}\r\n          {pokemonData &&\r\n            pokemonData.evolutions &&\r\n            pokemonData.evolutions.map((element, index) => (\r\n              <Link key={index} to={`/${element.name}/${element.id}`}>\r\n                <PokemonCard data={element} />\r\n              </Link>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { ApolloProvider } from '@apollo/client';\nimport { client } from './lib/apollo';\nimport Home from './pages/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Details from './pages/details';\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Switch>\n          <Route path='/' exact={true}>\n            <Home />\n          </Route>\n          <Route path='/:name/:id'>\n            <Details />\n          </Route>\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}